generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(version: "3.4.1"), uuid_ossp(map: "uuid-ossp", schema: "public")]
}

model country {
  id         String    @id @default(dbgenerated("uuid_generate_v5(uuid_generate_v4(), 'country'::text)")) @db.Uuid
  name       String    @unique @db.VarChar(25)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  region     region[]
}

model region {
  id          String                                @id @default(dbgenerated("uuid_generate_v5(uuid_generate_v4(), 'region'::text)")) @db.Uuid
  name        String                                @unique @db.VarChar(25)
  province    String                                @db.VarChar(50)
  coordinates Unsupported("geometry(Point, 4326)")?
  country_id  String                                @db.Uuid
  created_at  DateTime?                             @default(now()) @db.Timestamp(6)
  updated_at  DateTime?                             @default(now()) @db.Timestamp(6)
  deleted_at  DateTime?                             @db.Timestamp(6)
  country     country                               @relation(fields: [country_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "country_id_fk")
  wine        wine[]
}

model review {
  id          String    @id @default(dbgenerated("uuid_generate_v5(uuid_generate_v4(), 'review'::text)")) @db.Uuid
  points      Int
  description String
  taster_id   String    @db.Uuid
  wine_id     String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  taster      taster    @relation(fields: [taster_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "taster_id_fk")
  wine        wine      @relation(fields: [wine_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "wine_id_fk2")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model taster {
  id             String    @id @default(dbgenerated("uuid_generate_v5(uuid_generate_v4(), 'taster'::text)")) @db.Uuid
  name           String    @unique @db.VarChar(25)
  twitter_handle String    @unique @db.VarChar(50)
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  deleted_at     DateTime? @db.Timestamp(6)
  review         review[]
}

model wine {
  id          String    @id @default(dbgenerated("uuid_generate_v5(uuid_generate_v4(), 'wine'::text)")) @db.Uuid
  price       Float
  designation String
  variety     String    @db.VarChar(50)
  winery      String    @db.VarChar(50)
  title       String    @db.VarChar(100)
  region_id   String    @db.Uuid
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  deleted_at  DateTime? @db.Timestamp(6)
  review      review[]
  region      region    @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "region_id_fk")
}
